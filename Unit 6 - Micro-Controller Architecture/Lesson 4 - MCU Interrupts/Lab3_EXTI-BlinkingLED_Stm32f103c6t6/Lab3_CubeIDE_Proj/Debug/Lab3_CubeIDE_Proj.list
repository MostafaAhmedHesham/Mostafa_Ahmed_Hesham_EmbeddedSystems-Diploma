
Lab3_CubeIDE_Proj.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f4  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000324  0800032c  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000324  08000324  0001032c  2**0
                  CONTENTS
  4 .ARM          00000000  08000324  08000324  0001032c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000324  0800032c  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000324  08000324  00010324  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000328  08000328  00010328  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800032c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800032c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0001032c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000133  00000000  00000000  00010355  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000086  00000000  00000000  00010488  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000013c  00000000  00000000  0001050e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000068  00000000  00000000  00010650  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000050  00000000  00000000  000106b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001dbd  00000000  00000000  00010708  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000068c  00000000  00000000  000124c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00007f76  00000000  00000000  00012b51  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001aac7  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000d8  00000000  00000000  0001ab18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800030c 	.word	0x0800030c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800030c 	.word	0x0800030c

08000170 <init_EXTI>:
#define GPIOA_ODR *(volatile uint32_t *)(GPIOA_BASE + 0x0C)



void init_EXTI(void)
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	//Enable External interrupt for PA0 by configure  register AFIO_EXTICR1
	AFIO_EXTICR1 &= ~(0xF << 0);
 8000174:	4b0f      	ldr	r3, [pc, #60]	; (80001b4 <init_EXTI+0x44>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a0e      	ldr	r2, [pc, #56]	; (80001b4 <init_EXTI+0x44>)
 800017a:	f023 030f 	bic.w	r3, r3, #15
 800017e:	6013      	str	r3, [r2, #0]
	AFIO_EXTICR1 |= (0b0000 << 0);
 8000180:	4b0c      	ldr	r3, [pc, #48]	; (80001b4 <init_EXTI+0x44>)
 8000182:	4a0c      	ldr	r2, [pc, #48]	; (80001b4 <init_EXTI+0x44>)
 8000184:	681b      	ldr	r3, [r3, #0]
 8000186:	6013      	str	r3, [r2, #0]

	//Enable Rising trigger selection register bit 0 corresponding to EXTI0
	EXTI_RTSR |= (1 << 0);
 8000188:	4b0b      	ldr	r3, [pc, #44]	; (80001b8 <init_EXTI+0x48>)
 800018a:	681b      	ldr	r3, [r3, #0]
 800018c:	4a0a      	ldr	r2, [pc, #40]	; (80001b8 <init_EXTI+0x48>)
 800018e:	f043 0301 	orr.w	r3, r3, #1
 8000192:	6013      	str	r3, [r2, #0]

	//Enable Interrupt mask register bit 0 corresponding to EXTI0
	EXTI_IMR |= (1 << 0);
 8000194:	4b09      	ldr	r3, [pc, #36]	; (80001bc <init_EXTI+0x4c>)
 8000196:	681b      	ldr	r3, [r3, #0]
 8000198:	4a08      	ldr	r2, [pc, #32]	; (80001bc <init_EXTI+0x4c>)
 800019a:	f043 0301 	orr.w	r3, r3, #1
 800019e:	6013      	str	r3, [r2, #0]

	//Enable Failing trigger selection register bit 0 corresponding to EXTI0
	//EXTI_FTSR |= (1 << 0);

	//Enable NVIC IRQ6 which 0 corresponding to EXTI0
	NVIC_EXTI |= (1 << 6);
 80001a0:	4b07      	ldr	r3, [pc, #28]	; (80001c0 <init_EXTI+0x50>)
 80001a2:	681b      	ldr	r3, [r3, #0]
 80001a4:	4a06      	ldr	r2, [pc, #24]	; (80001c0 <init_EXTI+0x50>)
 80001a6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001aa:	6013      	str	r3, [r2, #0]
}
 80001ac:	bf00      	nop
 80001ae:	46bd      	mov	sp, r7
 80001b0:	bc80      	pop	{r7}
 80001b2:	4770      	bx	lr
 80001b4:	40010008 	.word	0x40010008
 80001b8:	40010408 	.word	0x40010408
 80001bc:	40010400 	.word	0x40010400
 80001c0:	e000e100 	.word	0xe000e100

080001c4 <EXTI0_IRQHandler>:


void EXTI0_IRQHandler(void)
{
 80001c4:	b480      	push	{r7}
 80001c6:	af00      	add	r7, sp, #0
	//Toggling LED
	GPIOA_ODR ^= (1<<13) ;
 80001c8:	4b07      	ldr	r3, [pc, #28]	; (80001e8 <EXTI0_IRQHandler+0x24>)
 80001ca:	681b      	ldr	r3, [r3, #0]
 80001cc:	4a06      	ldr	r2, [pc, #24]	; (80001e8 <EXTI0_IRQHandler+0x24>)
 80001ce:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80001d2:	6013      	str	r3, [r2, #0]

	//Clear Pending RequesEXTI_PR by set bit 0 which is corresponding to EXTI0
	EXTI_PR |= (1 << 0);
 80001d4:	4b05      	ldr	r3, [pc, #20]	; (80001ec <EXTI0_IRQHandler+0x28>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	4a04      	ldr	r2, [pc, #16]	; (80001ec <EXTI0_IRQHandler+0x28>)
 80001da:	f043 0301 	orr.w	r3, r3, #1
 80001de:	6013      	str	r3, [r2, #0]
}
 80001e0:	bf00      	nop
 80001e2:	46bd      	mov	sp, r7
 80001e4:	bc80      	pop	{r7}
 80001e6:	4770      	bx	lr
 80001e8:	4001080c 	.word	0x4001080c
 80001ec:	40010414 	.word	0x40010414

080001f0 <clock_init>:


void clock_init(void)
{
 80001f0:	b480      	push	{r7}
 80001f2:	af00      	add	r7, sp, #0
	//Enable PortA Clock for
	RCC_APB2ENR |= (1<<2);
 80001f4:	4b07      	ldr	r3, [pc, #28]	; (8000214 <clock_init+0x24>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4a06      	ldr	r2, [pc, #24]	; (8000214 <clock_init+0x24>)
 80001fa:	f043 0304 	orr.w	r3, r3, #4
 80001fe:	6013      	str	r3, [r2, #0]

	//Enable AFIO Clock
	RCC_APB2ENR |= (1<<0);
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <clock_init+0x24>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	4a03      	ldr	r2, [pc, #12]	; (8000214 <clock_init+0x24>)
 8000206:	f043 0301 	orr.w	r3, r3, #1
 800020a:	6013      	str	r3, [r2, #0]

}
 800020c:	bf00      	nop
 800020e:	46bd      	mov	sp, r7
 8000210:	bc80      	pop	{r7}
 8000212:	4770      	bx	lr
 8000214:	40021018 	.word	0x40021018

08000218 <gpio_init>:

void gpio_init(void)
{
 8000218:	b480      	push	{r7}
 800021a:	af00      	add	r7, sp, #0
	//Init GPIOA for LED
	GPIOA_CRH &= 0xFF0FFFFF;
 800021c:	4b0d      	ldr	r3, [pc, #52]	; (8000254 <gpio_init+0x3c>)
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	4a0c      	ldr	r2, [pc, #48]	; (8000254 <gpio_init+0x3c>)
 8000222:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000226:	6013      	str	r3, [r2, #0]
	GPIOA_CRH |= 0x00200000;
 8000228:	4b0a      	ldr	r3, [pc, #40]	; (8000254 <gpio_init+0x3c>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	4a09      	ldr	r2, [pc, #36]	; (8000254 <gpio_init+0x3c>)
 800022e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000232:	6013      	str	r3, [r2, #0]

	//Init GPIO_PA0 for Switch MODE0 = 00 CNF0 = 01 "Floating input"
	GPIOA_CRL &= (0b0000 << 0);
 8000234:	4b08      	ldr	r3, [pc, #32]	; (8000258 <gpio_init+0x40>)
 8000236:	681b      	ldr	r3, [r3, #0]
 8000238:	4b07      	ldr	r3, [pc, #28]	; (8000258 <gpio_init+0x40>)
 800023a:	2200      	movs	r2, #0
 800023c:	601a      	str	r2, [r3, #0]
	GPIOA_CRL |= (0b0100 << 0);
 800023e:	4b06      	ldr	r3, [pc, #24]	; (8000258 <gpio_init+0x40>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	4a05      	ldr	r2, [pc, #20]	; (8000258 <gpio_init+0x40>)
 8000244:	f043 0304 	orr.w	r3, r3, #4
 8000248:	6013      	str	r3, [r2, #0]
}
 800024a:	bf00      	nop
 800024c:	46bd      	mov	sp, r7
 800024e:	bc80      	pop	{r7}
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	40010804 	.word	0x40010804
 8000258:	40010800 	.word	0x40010800

0800025c <main>:


int main(void)
{
 800025c:	b580      	push	{r7, lr}
 800025e:	af00      	add	r7, sp, #0
	clock_init();
 8000260:	f7ff ffc6 	bl	80001f0 <clock_init>
	gpio_init();
 8000264:	f7ff ffd8 	bl	8000218 <gpio_init>
	init_EXTI();
 8000268:	f7ff ff82 	bl	8000170 <init_EXTI>

	while(1)
 800026c:	e7fe      	b.n	800026c <main+0x10>
	...

08000270 <Reset_Handler>:
 8000270:	480d      	ldr	r0, [pc, #52]	; (80002a8 <LoopForever+0x2>)
 8000272:	4685      	mov	sp, r0
 8000274:	f3af 8000 	nop.w
 8000278:	480c      	ldr	r0, [pc, #48]	; (80002ac <LoopForever+0x6>)
 800027a:	490d      	ldr	r1, [pc, #52]	; (80002b0 <LoopForever+0xa>)
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <LoopForever+0xe>)
 800027e:	2300      	movs	r3, #0
 8000280:	e002      	b.n	8000288 <LoopCopyDataInit>

08000282 <CopyDataInit>:
 8000282:	58d4      	ldr	r4, [r2, r3]
 8000284:	50c4      	str	r4, [r0, r3]
 8000286:	3304      	adds	r3, #4

08000288 <LoopCopyDataInit>:
 8000288:	18c4      	adds	r4, r0, r3
 800028a:	428c      	cmp	r4, r1
 800028c:	d3f9      	bcc.n	8000282 <CopyDataInit>
 800028e:	4a0a      	ldr	r2, [pc, #40]	; (80002b8 <LoopForever+0x12>)
 8000290:	4c0a      	ldr	r4, [pc, #40]	; (80002bc <LoopForever+0x16>)
 8000292:	2300      	movs	r3, #0
 8000294:	e001      	b.n	800029a <LoopFillZerobss>

08000296 <FillZerobss>:
 8000296:	6013      	str	r3, [r2, #0]
 8000298:	3204      	adds	r2, #4

0800029a <LoopFillZerobss>:
 800029a:	42a2      	cmp	r2, r4
 800029c:	d3fb      	bcc.n	8000296 <FillZerobss>
 800029e:	f000 f811 	bl	80002c4 <__libc_init_array>
 80002a2:	f7ff ffdb 	bl	800025c <main>

080002a6 <LoopForever>:
 80002a6:	e7fe      	b.n	80002a6 <LoopForever>
 80002a8:	20002800 	.word	0x20002800
 80002ac:	20000000 	.word	0x20000000
 80002b0:	20000000 	.word	0x20000000
 80002b4:	0800032c 	.word	0x0800032c
 80002b8:	20000000 	.word	0x20000000
 80002bc:	2000001c 	.word	0x2000001c

080002c0 <ADC1_2_IRQHandler>:
 80002c0:	e7fe      	b.n	80002c0 <ADC1_2_IRQHandler>
	...

080002c4 <__libc_init_array>:
 80002c4:	b570      	push	{r4, r5, r6, lr}
 80002c6:	2600      	movs	r6, #0
 80002c8:	4d0c      	ldr	r5, [pc, #48]	; (80002fc <__libc_init_array+0x38>)
 80002ca:	4c0d      	ldr	r4, [pc, #52]	; (8000300 <__libc_init_array+0x3c>)
 80002cc:	1b64      	subs	r4, r4, r5
 80002ce:	10a4      	asrs	r4, r4, #2
 80002d0:	42a6      	cmp	r6, r4
 80002d2:	d109      	bne.n	80002e8 <__libc_init_array+0x24>
 80002d4:	f000 f81a 	bl	800030c <_init>
 80002d8:	2600      	movs	r6, #0
 80002da:	4d0a      	ldr	r5, [pc, #40]	; (8000304 <__libc_init_array+0x40>)
 80002dc:	4c0a      	ldr	r4, [pc, #40]	; (8000308 <__libc_init_array+0x44>)
 80002de:	1b64      	subs	r4, r4, r5
 80002e0:	10a4      	asrs	r4, r4, #2
 80002e2:	42a6      	cmp	r6, r4
 80002e4:	d105      	bne.n	80002f2 <__libc_init_array+0x2e>
 80002e6:	bd70      	pop	{r4, r5, r6, pc}
 80002e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ec:	4798      	blx	r3
 80002ee:	3601      	adds	r6, #1
 80002f0:	e7ee      	b.n	80002d0 <__libc_init_array+0xc>
 80002f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f6:	4798      	blx	r3
 80002f8:	3601      	adds	r6, #1
 80002fa:	e7f2      	b.n	80002e2 <__libc_init_array+0x1e>
 80002fc:	08000324 	.word	0x08000324
 8000300:	08000324 	.word	0x08000324
 8000304:	08000324 	.word	0x08000324
 8000308:	08000328 	.word	0x08000328

0800030c <_init>:
 800030c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800030e:	bf00      	nop
 8000310:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000312:	bc08      	pop	{r3}
 8000314:	469e      	mov	lr, r3
 8000316:	4770      	bx	lr

08000318 <_fini>:
 8000318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031a:	bf00      	nop
 800031c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031e:	bc08      	pop	{r3}
 8000320:	469e      	mov	lr, r3
 8000322:	4770      	bx	lr
